// Code generated by protoc-gen-go. DO NOT EDIT.
// source: reserver.proto

/*
Package api is a generated protocol buffer package.

It is generated from these files:
	reserver.proto

It has these top-level messages:
	ReserveProductRequest
	ReserveProductResponse
	AcceptProductRequest
	AcceptProductResponse
*/
package api

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"
import api1 "."

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion2 // please upgrade the proto package

type ReserveProductRequest struct {
	ProductHash string `protobuf:"bytes,1,opt,name=product_hash,json=productHash" json:"product_hash,omitempty"`
}

func (m *ReserveProductRequest) Reset()                    { *m = ReserveProductRequest{} }
func (m *ReserveProductRequest) String() string            { return proto.CompactTextString(m) }
func (*ReserveProductRequest) ProtoMessage()               {}
func (*ReserveProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

func (m *ReserveProductRequest) GetProductHash() string {
	if m != nil {
		return m.ProductHash
	}
	return ""
}

type ReserveProductResponse struct {
	Product  *api1.Product      `protobuf:"bytes,1,opt,name=product" json:"product,omitempty"`
	Response *api1.ResponseData `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *ReserveProductResponse) Reset()                    { *m = ReserveProductResponse{} }
func (m *ReserveProductResponse) String() string            { return proto.CompactTextString(m) }
func (*ReserveProductResponse) ProtoMessage()               {}
func (*ReserveProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func (m *ReserveProductResponse) GetProduct() *api1.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *ReserveProductResponse) GetResponse() *api1.ResponseData {
	if m != nil {
		return m.Response
	}
	return nil
}

type AcceptProductRequest struct {
	ProductHash string `protobuf:"bytes,1,opt,name=product_hash,json=productHash" json:"product_hash,omitempty"`
}

func (m *AcceptProductRequest) Reset()                    { *m = AcceptProductRequest{} }
func (m *AcceptProductRequest) String() string            { return proto.CompactTextString(m) }
func (*AcceptProductRequest) ProtoMessage()               {}
func (*AcceptProductRequest) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{2} }

func (m *AcceptProductRequest) GetProductHash() string {
	if m != nil {
		return m.ProductHash
	}
	return ""
}

type AcceptProductResponse struct {
	Product  *api1.Product      `protobuf:"bytes,1,opt,name=product" json:"product,omitempty"`
	Response *api1.ResponseData `protobuf:"bytes,2,opt,name=response" json:"response,omitempty"`
}

func (m *AcceptProductResponse) Reset()                    { *m = AcceptProductResponse{} }
func (m *AcceptProductResponse) String() string            { return proto.CompactTextString(m) }
func (*AcceptProductResponse) ProtoMessage()               {}
func (*AcceptProductResponse) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{3} }

func (m *AcceptProductResponse) GetProduct() *api1.Product {
	if m != nil {
		return m.Product
	}
	return nil
}

func (m *AcceptProductResponse) GetResponse() *api1.ResponseData {
	if m != nil {
		return m.Response
	}
	return nil
}

func init() {
	proto.RegisterType((*ReserveProductRequest)(nil), "api.ReserveProductRequest")
	proto.RegisterType((*ReserveProductResponse)(nil), "api.ReserveProductResponse")
	proto.RegisterType((*AcceptProductRequest)(nil), "api.AcceptProductRequest")
	proto.RegisterType((*AcceptProductResponse)(nil), "api.AcceptProductResponse")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// Client API for ReserverAPI service

type ReserverAPIClient interface {
	// ReserveProduct -
	ReserveProduct(ctx context.Context, in *ReserveProductRequest, opts ...grpc.CallOption) (*ReserveProductResponse, error)
	// AcceptProduct -
	AcceptProduct(ctx context.Context, in *AcceptProductRequest, opts ...grpc.CallOption) (*AcceptProductResponse, error)
}

type reserverAPIClient struct {
	cc *grpc.ClientConn
}

func NewReserverAPIClient(cc *grpc.ClientConn) ReserverAPIClient {
	return &reserverAPIClient{cc}
}

func (c *reserverAPIClient) ReserveProduct(ctx context.Context, in *ReserveProductRequest, opts ...grpc.CallOption) (*ReserveProductResponse, error) {
	out := new(ReserveProductResponse)
	err := grpc.Invoke(ctx, "/api.ReserverAPI/ReserveProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *reserverAPIClient) AcceptProduct(ctx context.Context, in *AcceptProductRequest, opts ...grpc.CallOption) (*AcceptProductResponse, error) {
	out := new(AcceptProductResponse)
	err := grpc.Invoke(ctx, "/api.ReserverAPI/AcceptProduct", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for ReserverAPI service

type ReserverAPIServer interface {
	// ReserveProduct -
	ReserveProduct(context.Context, *ReserveProductRequest) (*ReserveProductResponse, error)
	// AcceptProduct -
	AcceptProduct(context.Context, *AcceptProductRequest) (*AcceptProductResponse, error)
}

func RegisterReserverAPIServer(s *grpc.Server, srv ReserverAPIServer) {
	s.RegisterService(&_ReserverAPI_serviceDesc, srv)
}

func _ReserverAPI_ReserveProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ReserveProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReserverAPIServer).ReserveProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReserverAPI/ReserveProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReserverAPIServer).ReserveProduct(ctx, req.(*ReserveProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _ReserverAPI_AcceptProduct_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(AcceptProductRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(ReserverAPIServer).AcceptProduct(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/api.ReserverAPI/AcceptProduct",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(ReserverAPIServer).AcceptProduct(ctx, req.(*AcceptProductRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _ReserverAPI_serviceDesc = grpc.ServiceDesc{
	ServiceName: "api.ReserverAPI",
	HandlerType: (*ReserverAPIServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ReserveProduct",
			Handler:    _ReserverAPI_ReserveProduct_Handler,
		},
		{
			MethodName: "AcceptProduct",
			Handler:    _ReserverAPI_AcceptProduct_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "reserver.proto",
}

func init() { proto.RegisterFile("reserver.proto", fileDescriptor0) }

var fileDescriptor0 = []byte{
	// 233 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0xe2, 0x2b, 0x4a, 0x2d, 0x4e,
	0x2d, 0x2a, 0x4b, 0x2d, 0xd2, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x4e, 0x2c, 0xc8, 0x94,
	0xe2, 0xce, 0xcd, 0x4f, 0x49, 0xcd, 0x81, 0x88, 0x28, 0x59, 0x71, 0x89, 0x06, 0x41, 0xd4, 0x04,
	0x14, 0xe5, 0xa7, 0x94, 0x26, 0x97, 0x04, 0xa5, 0x16, 0x96, 0xa6, 0x16, 0x97, 0x08, 0x29, 0x72,
	0xf1, 0x14, 0x40, 0x44, 0xe2, 0x33, 0x12, 0x8b, 0x33, 0x24, 0x18, 0x15, 0x18, 0x35, 0x38, 0x83,
	0xb8, 0xa1, 0x62, 0x1e, 0x89, 0xc5, 0x19, 0x4a, 0xf9, 0x5c, 0x62, 0xe8, 0x7a, 0x8b, 0x0b, 0xf2,
	0xf3, 0x8a, 0x53, 0x85, 0xd4, 0xb8, 0xd8, 0xa1, 0x0a, 0xc1, 0xfa, 0xb8, 0x8d, 0x78, 0xf4, 0x12,
	0x0b, 0x32, 0xf5, 0x60, 0xca, 0x60, 0x92, 0x42, 0xba, 0x5c, 0x1c, 0x45, 0x50, 0x3d, 0x12, 0x4c,
	0x60, 0x85, 0x82, 0x60, 0x85, 0x30, 0x83, 0x5c, 0x12, 0x4b, 0x12, 0x83, 0xe0, 0x4a, 0x94, 0x2c,
	0xb9, 0x44, 0x1c, 0x93, 0x93, 0x53, 0x0b, 0x4a, 0x48, 0x77, 0x6b, 0x1e, 0x97, 0x28, 0x9a, 0x56,
	0x9a, 0x3a, 0xd5, 0x68, 0x09, 0x23, 0x17, 0x37, 0x34, 0x70, 0x8a, 0x1c, 0x03, 0x3c, 0x85, 0xbc,
	0xb9, 0xf8, 0x50, 0xc3, 0x4a, 0x48, 0x0a, 0xa6, 0x1d, 0x33, 0xf0, 0xa5, 0xa4, 0xb1, 0xca, 0x41,
	0x43, 0x81, 0x41, 0xc8, 0x83, 0x8b, 0x17, 0xc5, 0x33, 0x42, 0x92, 0x60, 0xf5, 0xd8, 0xc2, 0x46,
	0x4a, 0x0a, 0x9b, 0x14, 0xcc, 0xa4, 0x24, 0x36, 0x70, 0x2a, 0x30, 0x06, 0x04, 0x00, 0x00, 0xff,
	0xff, 0x79, 0x23, 0x6e, 0x29, 0x29, 0x02, 0x00, 0x00,
}
